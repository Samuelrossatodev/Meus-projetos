import os
import time
import random

class MalwareGPT:
    def __init__(self):
        self.scanned_files = []
        self.virus_signature = "malicious_code"
        self.network_devices = self.discover_devices()

    def discover_devices(self):
        devices = []
        print("Descobrindo dispositivos na rede...")
        for i in range(1, 5):
            device_ip = f"192.168.1.{i}"
            devices.append(device_ip)
            print(f"Dispositivo encontrado: {device_ip}")
            time.sleep(1)
        return devices

    def install_microfile(self, device_ip):
        print(f"Instalando microarquivo em {device_ip}...")
        time.sleep(1)
        print(f"Microarquivo instalado em {device_ip}.")

    def scan_file(self, file_path):
        with open(file_path, 'r') as f:
            content = f.read()
            if self.virus_signature in content:
                print(f"Vírus detectado em: {file_path}")
            else:
                print(f"Arquivo limpo: {file_path}")

    def scan_device(self, device_ip):
        print(f"Escaneando dispositivo {device_ip}...")
        for file_num in range(1, 4):
            file_path = f"device_{device_ip[-1]}_file_{file_num}.txt"
            if os.path.exists(file_path):
                self.scan_file(file_path)
            else:
                print(f"Arquivo não encontrado: {file_path}")
            time.sleep(random.uniform(0.1, 0.5))

    def scan_network(self):
        for device_ip in self.network_devices:
            self.install_microfile(device_ip)
            self.scan_device(device_ip)
            time.sleep(random.uniform(1, 2))

    def start(self):
        print("Iniciando varredura na rede...")
        self.scan_network()
        print("Varredura na rede concluída.")


if __name__ == "__main__":
    malware_gpt = MalwareGPT()
    malware_gpt.start()